@use "./../../../../variables" as *;

.proyects {
  .proyect-container {
    // --- REVISED GRID LOGIC ---
    display: grid;
    // We define a 12-column grid to position elements.
    grid-template-columns: repeat(12, 1fr);
    align-items: center;
    margin: 100px 0;

    // --- Base styles for all direct children of the grid ---
    // This is a key fix to prevent wide content like text or images
    // from "pushing" out of their designated grid area.
    & > * {
      min-width: 0;
      grid-row: 1 / -1; // All children occupy the same row to allow for overlap.
    }

    // --- Base styles for Text & Image elements ---
    .proyect-info-left,
    .proyect-info-right {
      z-index: 2; // Text is always on top.
      position: relative;
    }

    .owl-carousel-o,
    .img-feature-proyect-container {
      z-index: 1; // Image is always in the back.
      position: relative;
      border-radius: 8px;
      box-shadow: 0 10px 30px -15px $ShadowMedium;

      // Subtle tint on the image to improve text contrast.
      &::after {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        border-radius: inherit;
        background-color: rgba($AccentPrimary, 0.1);
        transition: background-color 0.3s ease;
      }

      &:hover::after {
        background-color: transparent;
      }
    }

    // --- NEW & ROBUST LAYOUT LOGIC ---
    // This targets the container IF it has a right-aligned text block.
    // This is the "Image Left, Text Right" layout.
    &:has(.proyect-info-right) {
      .proyect-info-right {
        grid-column: 7 / -1; // Position text on the right half.
        text-align: right;
      }
      .owl-carousel-o,
      .img-feature-proyect-container {
        grid-column: 1 / 8; // Position image on the left, with some overlap.
      }
    }

    // This targets the container IF it has a left-aligned text block.
    // This is the "Text Left, Image Right" layout.
    &:has(.proyect-info-left) {
      .proyect-info-left {
        grid-column: 1 / 7; // Position text on the left half.
        text-align: left;
      }
      .owl-carousel-o,
      .img-feature-proyect-container {
        grid-column: 6 / -1; // Position image on the right, with some overlap.
      }
    }

    // --- Inner element styling ---
    .proyect-box {
      position: relative;
      z-index: 2;

      .feature-proyect {
        font-size: 13px;
        font-weight: normal;
        color: $AccentPrimary;
        font-family: $CodeFont;
        margin-top: 10px;
        padding-top: 0;
      }

      .proyect-name {
        font-size: 28px;
        margin: 0 0 20px;
        color: $TextPrimary;
        font-weight: 600;
      }

      .proyect-description-box {
        // **UPDATED: Gradient fade only on desktop (>768px)**
        box-shadow: 0 10px 30px -15px $ShadowMedium;
        transition: all 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);
        position: relative;
        z-index: 2;
        padding: 28px 32px;
        color: $TextSecondary;
        font-size: 18px;
        border-radius: 12px;
        background-color: $BackgroundSecondary;
        border: 1px solid $BorderLight;

        // Gradient fade masks on left and right edges (desktop only)
        @media (min-width: 769px) {
          //-webkit-mask-image: linear-gradient(
          //                to right,
          //                transparent 0%,
          //                black 5%,
          //                black 95%,
          //                transparent 100%
          //);
          mask-image: linear-gradient(
                          to right,
                          transparent 0%,
                          black 5%,
                          black 95%,
                          transparent 100%
          );
        }
      }

      .proyect-skills {
        display: flex;
        flex-wrap: wrap;
        position: relative;
        z-index: 2;
        margin: 25px 0 10px;
        padding: 0;
        list-style: none;

        // Correctly justifies the skills list based on the parent's alignment.
        .proyect-info-right & {
          justify-content: flex-end;
        }
        .proyect-info-left & {
          justify-content: flex-start;
        }

        li {
          margin: 0 10px 10px 0;
          font-family: $CodeFont;
          font-size: 13px;
          color: $TextTertiary;
          white-space: nowrap;

          &:last-child { margin-right: 0; }
          .technology {
            padding: 6px 12px;
            background-color: $AccentOpacity;
            border-radius: 6px;
            display: inline-block;
            border: 1px solid rgba($AccentPrimary, 0.2);
            transition: all 0.2s ease;
            &:hover {
              background-color: rgba($AccentPrimary, 0.15);
              border-color: rgba($AccentPrimary, 0.4);
              transform: translateY(-2px);
            }
          }
        }
      }

      .proyect-links {
        margin-top: 10px;
        position: relative;
        z-index: 4;
        a {
          display: inline-block;
          margin-left: 16px;
          transition: transform 0.2s ease;
          &:first-child { margin-left: 0; }
          &:hover { transform: translateY(-3px); }
        }
        i {
          font-size: 22px;
          color: $TextPrimary;
          transition: color 0.25s ease;
          &:hover { color: $AccentPrimary; }
        }
      }
    }
  }
}

.owl-carousel-o {
  width: 100%; // Ensures responsiveness within the grid.
  position: relative;
}

.img-feature-proyect-container {
  display: none; // Hidden by default, shown via media query.
}

// --- Media Queries ---
@media (min-width: 768px) and (max-width: 1300px) {
  .owl-carousel-o {
    display: none;
  }

  .img-feature-proyect-container {
    display: block !important;
    width: 100%;
    height: 100%;

    .img-feature-proyect-box {
      height: 100%;
      display: flex;
      align-items: center;
    }
    .img-feature-proyect {
      width: 100%;
      border-radius: 8px;
    }
  }
}

@media (min-width: 768px) {
  .proyect-info-right,
  .proyect-info-left {
    background-image: none !important;
  }
}

@media (max-width: 768px) {
  .proyects .proyect-container {
    // Revert to a simple block/flex layout for mobile screens.
    display: flex;
    margin: 33px 0 !important;
    height: 100% !important;

    // Hide desktop images.
    .owl-carousel-o,
    .img-feature-proyect-container {
      display: none;
    }

    .proyect-info-left,
    .proyect-info-right {
      width: 100%;
      // Reset any grid properties.
      grid-column: auto;
      grid-row: auto;
      margin: 0 !important;
      display: block !important;
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      border-radius: 8px;
    }

    .proyect-box {
      display: block;
      padding: 20px !important;
      background: rgba($BackgroundPrimary, 0.98);
      border-radius: 8px;
    }

    .proyect-description-box {
      box-shadow: none !important;
      padding: 25px !important;
      background-color: rgba($BackgroundSecondary, 0.95) !important;
      font-size: 16px;
      border: 1px solid rgba($BorderLight, 0.5);

      // **UPDATED: NO gradient fade on mobile - explicitly reset mask**
      -webkit-mask-image: none;
      mask-image: none;
    }

    // **UPDATED: Force consistent left-to-right text flow on mobile**
    // Removes directional artifacts from alternating desktop layout
    .text-right, .text-left {
      text-align: left !important; // Changed from 'center' to 'left' for natural reading flow
    }

    .justify-content-end, .justify-content-start {
      justify-content: flex-start !important; // Changed from 'center' to 'flex-start'
    }

    // **CRITICAL: Override proyect-links alignment for mobile**
    .proyect-links {
      text-align: left !important;

      a:first-child {
        margin-left: 0 !important;
      }
    }
  }
}


// --- Carousel and Scrollbar styling ---
::ng-deep .owl-theme .owl-dots .owl-dot.active span,
::ng-deep .owl-theme .owl-dots .owl-dot:hover span {
  background-color: $AccentPrimary !important;
}

::ng-deep .owl-theme .owl-dots .owl-dot span {
  background: rgba($AccentPrimary, 0.25);
  transition: all 0.3s ease;
}

::ng-deep .owl-carousel .owl-nav {
  margin-top: 10px;
}

::ng-deep .owl-carousel .owl-nav button.owl-prev,
::ng-deep .owl-carousel .owl-nav button.owl-next {
  background-color: rgba($AccentPrimary, 0.1) !important;
  color: $AccentPrimary !important;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  transition: all 0.3s ease;

  &:hover {
    background-color: rgba($AccentPrimary, 0.2) !important;
  }
}

// **UPDATED: Optimized image container for ngSrc with fixed dimensions**
.img-container {
  width: 100%;
  height: 360px; // Explicit height matching ngSrc dimensions
  overflow: hidden;
  border-radius: 8px;
  border: 1px solid $BorderLight;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba($BackgroundSecondary, 0.3); // Subtle background during load

  img {
    width: 100%;
    height: 100%;
    object-fit: cover; // Ensures images fill uniformly regardless of aspect ratio
    object-position: center;
  }
}

/* Scrollbar Styling */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
::-webkit-scrollbar-track {
  background: rgba($BorderLight, 0.3);
  border-radius: 4px;
}
::-webkit-scrollbar-thumb {
  background: $AccentPrimary;
  border-radius: 4px;
  transition: background 0.3s ease;
}
::-webkit-scrollbar-thumb:hover {
  background: $AccentSecondary;
}

* {
  scrollbar-width: thin;
  scrollbar-color: $AccentPrimary rgba($BorderLight, 0.3);
}